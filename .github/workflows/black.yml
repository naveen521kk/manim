name: black
on:
  workflow_dispatch:
  schedule:
    - cron: "10 9 * * *"

jobs:
  format:
    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install black
        run: pip install black

      - name: Black
        run: black manim tests example_scenes
      - name: Check for modified files
        shell: bash
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
      - name: Print Black Version if Failed
        shell: bash
        if: steps.git-check.outputs.modified == 'true'
        run: |
          blackVer=$(black --version)
          blackVersion=$(python -c "print('${blackVer}'.split()[2])")
          date=$(python -c "import time;print(time.localtime().tm_mday)")
          pushBranch="black-${blackVersion}-${date}"
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git checkout -B "$pushBranch"
          git add .
          git commit -m "Running Black ON Master"
      - name: Push branch
        env:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          gitrepo: ${{ github.repository }}
        if: steps.git-check.outputs.modified == 'true'
        shell: bash
        run: |
          blackVer=$(black --version)
          blackVersion=$(python -c "print('${blackVer}'.split()[2])")
          date=$(python -c "import time;print(time.localtime().tm_mday)")
          pushBranch="black-${blackVersion}-${date}"
          #$remote_repo="https://$($env:GITHUB_ACTOR):$($env:access_token)@github.com/$($env:gitrepo).git"
          echo "pushing origin"
          git push -u origin "${pushBranch}" --force
          #git push "$($remote_repo)" "$($pushBranch)":"$($pushBranch)"
          #git push up "$($pushBranch):$($pushBranch)"
      - name: Make a PR
        env:
          access_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $env:GITHUB_TOKEN = $env:access_token
          $blackVer = black --version
          $blackVersion = python -c "print('$($blackVer)'.split()[2])"
          $date = python -c "import time;print(time.localtime().tm_mday)"
          $pushBranch="black-$($blackVersion)-$($date)"
          echo "$pushBranch"
          $postContents = @{title="Black on Master - Automation";head="naveen521kk:$($pushBranch)";base="master"} | ConvertTo-Json -Compress
          echo "$postContents"
          Invoke-WebRequest `
            -Method POST `
            -Headers @{ "Accept" = "application/vnd.github.v3+json"; "Authorization"= "token $($env:access_token)"}`
            -Uri https://api.github.com/repos/naveen521kk/manim/pulls `
            -Body "$($postContents)"
          #gh pr create --title "Black on Master - Automation" --body "The current black version is $($blackVersion)" 
